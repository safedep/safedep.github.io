"use strict";(self.webpackChunksafedep=self.webpackChunksafedep||[]).push([[5232],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var g=a.createContext({}),l=function(e){var t=a.useContext(g),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},s=function(e){var t=l(e.components);return a.createElement(g.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,g=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=l(n),f=o,d=p["".concat(g,".").concat(f)]||p[f]||u[f]||i;return n?a.createElement(d,r(r({ref:t},s),{},{components:n})):a.createElement(d,r({ref:t},s))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=p;var c={};for(var g in t)hasOwnProperty.call(t,g)&&(c[g]=t[g]);c.originalType=e,c.mdxType="string"==typeof e?e:o,r[1]=c;for(var l=2;l<i;l++)r[l]=n[l];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},8388:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>g,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var a=n(7462),o=(n(7294),n(3905));const i={sidebar_position:3,id:"gateway-configuration"},r="Gateway Configuration",c={unversionedId:"getting-started/gateway-configuration",id:"getting-started/gateway-configuration",title:"Gateway Configuration",description:"The gateway configuration is maintained as a JSON document. This serves as the",source:"@site/docs/getting-started/gateway-configuration.md",sourceDirName:"getting-started",slug:"/getting-started/gateway-configuration",permalink:"/docs/getting-started/gateway-configuration",draft:!1,editUrl:"https://github.com/safedep/safedep.github.io/tree/main/docs/getting-started/gateway-configuration.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,id:"gateway-configuration"},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/docs/getting-started/installation"},next:{title:"Gateway Authentication",permalink:"/docs/getting-started/gateway-authentication"}},g={},l=[{value:"Configuration Spec",id:"configuration-spec",level:2},{value:"Generating Configuration",id:"generating-configuration",level:2},{value:"Validate Existing Configuration",id:"validate-existing-configuration",level:2},{value:"Generating Envoy Proxy Configuration",id:"generating-envoy-proxy-configuration",level:2},{value:"Configuration Reload",id:"configuration-reload",level:2}],s={toc:l};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"gateway-configuration"},"Gateway Configuration"),(0,o.kt)("p",null,"The gateway configuration is maintained as a JSON document. This serves as the\nsource of truth for configuring any other component used by gateway such as Envoy proxy.\n",(0,o.kt)("a",{parentName:"p",href:"quickstart"},"Quickstart")," based setup will find the configuration files in\n",(0,o.kt)("inlineCode",{parentName:"p"},"config/local"),"."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Gateway has multiple components. Learn more about gateway in ",(0,o.kt)("a",{parentName:"p",href:"/docs/concepts/gateway"},"gateway\nconcepts"))),(0,o.kt)("h2",{id:"configuration-spec"},"Configuration Spec"),(0,o.kt)("p",null,"The configuration JSON conforms to the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/safedep/gateway/blob/main/services/spec/proto/config.proto"},"configuration specification"),". This means, configuration can be generated and derived. For example, the configuration\nfor Envoy proxy is generated from ",(0,o.kt)("inlineCode",{parentName:"p"},"gateway.json"),"."),(0,o.kt)("h2",{id:"generating-configuration"},"Generating Configuration"),(0,o.kt)("p",null,"The internal ",(0,o.kt)("inlineCode",{parentName:"p"},"confli")," tool can be used to generate and validate configuration\nfiles. To generate a new gateway configuration"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker run ghcr.io/safedep/gateway:latest \\\n    confli -command generate-sample\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"When in doubt, always do ",(0,o.kt)("inlineCode",{parentName:"p"},"docker pull ghcr.io/safedep/gateway:latest"))),(0,o.kt)("h2",{id:"validate-existing-configuration"},"Validate Existing Configuration"),(0,o.kt)("p",null,"To validate an existing configuration file"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -v `pwd`/config/local:/config \\\n    ghcr.io/safedep/gateway:latest \\\n    confli -command validate -file ./config/local/gateway.json\n")),(0,o.kt)("h2",{id:"generating-envoy-proxy-configuration"},"Generating Envoy Proxy Configuration"),(0,o.kt)("p",null,"To generate envoy proxy configuration from gateway configuration"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -v `pwd`/config/local:/config \\\n    ghcr.io/safedep/gateway:latest \\\n    confli -command generate-envoy -file ./config/local/gateway.json\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Envoy proxy configuration must be re-generated if there is a change in\ngateway upstreams")),(0,o.kt)("h2",{id:"configuration-reload"},"Configuration Reload"),(0,o.kt)("p",null,"The gateway services reload configuration if a change is detected in\n",(0,o.kt)("inlineCode",{parentName:"p"},"gateway.json")," file. This can be confirmed through debug logs"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'gateway-pdp-1  | 2022-12-07T11:01:15.768Z   DEBUG   config/repository_file.go:99    Detected changes in configuration file  {"service": "pdp"}\ngateway-pdp-1  | 2022-12-07T11:01:15.769Z   DEBUG   config/repository_file.go:105   Successfully reloaded gateway config    {"service": "pdp"}\n')))}u.isMDXComponent=!0}}]);